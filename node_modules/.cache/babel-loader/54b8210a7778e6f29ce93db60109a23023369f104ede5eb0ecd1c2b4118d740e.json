{"ast":null,"code":"var _jsxFileName = \"/Applications/APIwizULdeveloperassignment/text-analyzer/src/TextAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAnalyzer = () => {\n  _s();\n  const [text, setText] = useState('');\n  const analyzeText = inputText => {\n    const charCount = inputText.length;\n    const wordCount = inputText.split(/\\s+/).filter(Boolean).length;\n    const sentenceCount = inputText.split(/[.!?]+/).filter(Boolean).length;\n    const paragraphCount = inputText.split('\\n').filter(Boolean).length;\n    const spaceCount = inputText.split(' ').length - 1;\n    const punctuationCount = inputText.replace(/[^\\W\\s]/g, '').length;\n    console.log('Number of Characters :', charCount);\n    console.log('Number of Words :', wordCount);\n    console.log('Number of Sentences :', sentenceCount);\n    console.log('Number of Paragraphs :', paragraphCount);\n    console.log('Number of Spaces :', spaceCount);\n    console.log('Number of Punctuation :', punctuationCount);\n  };\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    setText(newText);\n    analyzeText();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type your text here...\",\n      value: text,\n      onChange: handleTextChange,\n      rows: 10,\n      cols: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n_s(TextAnalyzer, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextAnalyzer;\nexport default TextAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"TextAnalyzer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextAnalyzer","_s","text","setText","analyzeText","inputText","charCount","length","wordCount","split","filter","Boolean","sentenceCount","paragraphCount","spaceCount","punctuationCount","replace","console","log","handleTextChange","e","newText","target","value","children","placeholder","onChange","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/APIwizULdeveloperassignment/text-analyzer/src/TextAnalyzer.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TextAnalyzer = () => {\n      const [text, setText] = useState('');\n      \n      const analyzeText = (inputText) => {\n            const charCount = inputText.length;\n            const wordCount = inputText.split(/\\s+/ ).filter(Boolean).length;\n            const sentenceCount = inputText.split(/[.!?]+/).filter(Boolean).length;\n            const paragraphCount = inputText.split('\\n').filter(Boolean).length;\n            const spaceCount = inputText.split(' ').length - 1;\n            const punctuationCount = inputText.replace(/[^\\W\\s]/g, '').length;\n\n\n            console.log('Number of Characters :', charCount);\n            console.log('Number of Words :', wordCount);\n            console.log('Number of Sentences :', sentenceCount);\n            console.log('Number of Paragraphs :', paragraphCount);\n            console.log('Number of Spaces :', spaceCount);\n            console.log('Number of Punctuation :', punctuationCount);\n      };\n      const handleTextChange = (e) => {\n            const newText = e.target.value;\n            setText(newText);\n            analyzeText();\n      };\n      return (\n            <div>\n                  <textarea\n                        placeholder=\"Type your text here...\"\n                        value = {text}\n                        onChange = {handleTextChange}\n                        rows = {10}\n                        cols = {50}\n                  />\n            </div>\n      );\n};\n\nexport default TextAnalyzer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,WAAW,GAAIC,SAAS,IAAK;IAC7B,MAAMC,SAAS,GAAGD,SAAS,CAACE,MAAM;IAClC,MAAMC,SAAS,GAAGH,SAAS,CAACI,KAAK,CAAC,KAAM,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACJ,MAAM;IAChE,MAAMK,aAAa,GAAGP,SAAS,CAACI,KAAK,CAAC,QAAQ,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACJ,MAAM;IACtE,MAAMM,cAAc,GAAGR,SAAS,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACJ,MAAM;IACnE,MAAMO,UAAU,GAAGT,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAACF,MAAM,GAAG,CAAC;IAClD,MAAMQ,gBAAgB,GAAGV,SAAS,CAACW,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACT,MAAM;IAGjEU,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEZ,SAAS,CAAC;IAChDW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEV,SAAS,CAAC;IAC3CS,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEN,aAAa,CAAC;IACnDK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,cAAc,CAAC;IACrDI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,UAAU,CAAC;IAC7CG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,gBAAgB,CAAC;EAC9D,CAAC;EACD,MAAMI,gBAAgB,GAAIC,CAAC,IAAK;IAC1B,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BpB,OAAO,CAACkB,OAAO,CAAC;IAChBjB,WAAW,CAAC,CAAC;EACnB,CAAC;EACD,oBACML,OAAA;IAAAyB,QAAA,eACMzB,OAAA;MACM0B,WAAW,EAAC,wBAAwB;MACpCF,KAAK,EAAIrB,IAAK;MACdwB,QAAQ,EAAIP,gBAAiB;MAC7BQ,IAAI,EAAI,EAAG;MACXC,IAAI,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAElB,CAAC;AAAC/B,EAAA,CAnCID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}