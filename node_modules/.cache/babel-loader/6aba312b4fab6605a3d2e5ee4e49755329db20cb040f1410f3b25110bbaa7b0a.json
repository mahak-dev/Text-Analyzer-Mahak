{"ast":null,"code":"var _jsxFileName = \"/Applications/APIwizULdeveloperassignment/text-analyzer/src/worddetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordDetails = ({\n  word\n}) => {\n  _s();\n  const [wordDetails, setWordDetails] = useState(null);\n  useEffect(() => {\n    const fetchWordDetails = async () => {\n      try {\n        if (!word) {\n          setWordDetails(null);\n          return;\n        }\n\n        // Replace 'YOUR_API_KEY' with your actual API key\n        const apiKey = 'YOUR_API_KEY';\n        const apiUrl = `https://dictionaryapi.com/api/v3/references/collegiate/json/${word}?key=${apiKey}`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        // Consider only the first object from the array\n        const firstObject = data[0];\n        setWordDetails(firstObject);\n      } catch (error) {\n        console.error('Error fetching word details:', error);\n      }\n    };\n    fetchWordDetails();\n  }, [word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wordDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: wordDetails.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), wordDetails.shortdef && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Definition:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), \" \", wordDetails.shortdef.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), wordDetails.fl && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Part of Speech:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), \" \", wordDetails.fl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), wordDetails.syns && wordDetails.syns.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Synonyms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), \" \", wordDetails.syns.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(WordDetails, \"O0CDLZXTPeNwF1Tq+444fO6eRRo=\");\n_c = WordDetails;\nexport default WordDetails;\nvar _c;\n$RefreshReg$(_c, \"WordDetails\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WordDetails","word","_s","wordDetails","setWordDetails","fetchWordDetails","apiKey","apiUrl","response","fetch","data","json","firstObject","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","shortdef","join","fl","syns","length","_c","$RefreshReg$"],"sources":["/Applications/APIwizULdeveloperassignment/text-analyzer/src/worddetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst WordDetails = ({ word }) => {\n  const [wordDetails, setWordDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchWordDetails = async () => {\n      try {\n        if (!word) {\n          setWordDetails(null);\n          return;\n        }\n\n        // Replace 'YOUR_API_KEY' with your actual API key\n        const apiKey = 'YOUR_API_KEY';\n        const apiUrl = `https://dictionaryapi.com/api/v3/references/collegiate/json/${word}?key=${apiKey}`;\n\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        // Consider only the first object from the array\n        const firstObject = data[0];\n\n        setWordDetails(firstObject);\n      } catch (error) {\n        console.error('Error fetching word details:', error);\n      }\n    };\n\n    fetchWordDetails();\n  }, [word]);\n\n  return (\n    <div>\n      {wordDetails && (\n        <div>\n          <h2>{wordDetails.word}</h2>\n          {wordDetails.shortdef && (\n            <p>\n              <strong>Definition:</strong> {wordDetails.shortdef.join(', ')}\n            </p>\n          )}\n          {wordDetails.fl && (\n            <p>\n              <strong>Part of Speech:</strong> {wordDetails.fl}\n            </p>\n          )}\n          {wordDetails.syns && wordDetails.syns.length > 0 && (\n            <p>\n              <strong>Synonyms:</strong> {wordDetails.syns.join(', ')}\n            </p>\n          )}\n          {/* Add more details as needed */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WordDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,IAAI,CAACJ,IAAI,EAAE;UACTG,cAAc,CAAC,IAAI,CAAC;UACpB;QACF;;QAEA;QACA,MAAME,MAAM,GAAG,cAAc;QAC7B,MAAMC,MAAM,GAAI,+DAA8DN,IAAK,QAAOK,MAAO,EAAC;QAElG,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QACpC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,WAAW,GAAGF,IAAI,CAAC,CAAC,CAAC;QAE3BN,cAAc,CAACQ,WAAW,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAAgB,QAAA,EACGZ,WAAW,iBACVJ,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKZ,WAAW,CAACF;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC1BhB,WAAW,CAACiB,QAAQ,iBACnBrB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,WAAW,CAACiB,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CACJ,EACAhB,WAAW,CAACmB,EAAE,iBACbvB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAQ;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,WAAW,CAACmB,EAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACJ,EACAhB,WAAW,CAACoB,IAAI,IAAIpB,WAAW,CAACoB,IAAI,CAACC,MAAM,GAAG,CAAC,iBAC9CzB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,WAAW,CAACoB,IAAI,CAACF,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvDIF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}